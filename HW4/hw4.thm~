Specification "hw4".

Set subgoals off.
Set witnesses on.

% Preservation theorem %

Theorem Preservation : forall E E' T, {of E T} -> {step E E'} -> {of E' T}.
induction on 2. intros. case H2.
 case H1. apply IH to H4 H3. search.
 case H1. case H3. inst H5 with n1 = T1. cut H6 with H4. search.
 case H1. apply IH to H6 H3. search.
 case H1. apply IH to H4 H3. search.
 case H1. case H3. inst H6 with n1 = P. cut H8 with H5.inst H4 with n1 = P, n2 = E1. cut H10 with H5. cut H11 with H7. search.



Theorem CFL_Lemma : forall E T, {of E T} -> {val E} -> (exists E' T', T = all T' /\ E = lam E') \/ (exists T' P E', T = some T' /\ E = pack T' P E').
 intros. case H2.
 case H1. search.
 case H1. search.
 
% Progress Theorem %

Theorem Progress : forall E T, {of E T} -> {val E} \/ exists E', {step E E'}.
 induction on 1. intros. case H1.
 search.
 apply IH to H2. case H4. apply CFL_Lemma to H2 H5.
 case H6. search.
 search.
 apply IH to H4. case H5.
 apply CFL_Lemma to H4 H6. search.
 search.
 apply IH to H2. case H4. apply CFL_Lemma to H2 H5.
 case H6. search.
 search.

Define typet : typ -> prop by nabla t, typet t.

Define name :  exp -> prop by nabla x, name x.

Define ctx : olist -> prop by
 ctx nil ;
 nabla t, ctx (typ t :: G) := ctx G;
 nabla x, ctx (of x T :: G) := {G |- typ T} /\ ctx G.

Theorem ctx_inversion : forall G E,
 ctx G -> member E G ->
 (exists T, E = typ T /\ typet T) \/
 (exists x T, E = of x T /\ name x /\ {G |- typ T}).
 induction on 2.intros.case H2.
  case H1.
   search.
   search.
  case H1.
   apply IH to H4 H3. case H5.
    search.
    search.
   apply IH to H5 H3. case H6.
    search.
    search.
    
Theorem strengthen_of : forall G T1 T2,
nabla x, ctx G -> {G, of x T1 |- typ T2} -> {G |- typ T2}.
 induction on 2. intros. case H2.
  apply IH to _ H3. search.
  apply IH to _ H3. search. 
  case H4.
  case H3.
  apply ctx_inversion to H1 H5. case H6.
  case H3. case H7. search.
  case H3.

Theorem Regularity : forall G E T, ctx G -> {G |- of E T} -> {G |- typ T}.
induction on 2. intros. case H2.
apply IH to _ H3. search.
 apply IH to H1 H3. case H5.
  inst H6 with n1 = T1. cut H7. search.
  apply ctx_inversion to H1 H7. case H8.
   case H6. case H9.
   case H6.
 apply IH to H1 H5. search.
     apply IH to H1 H3.  skip.
 apply ctx_inversion to H1 H4. case H5.
  case H6. case H3.
   case H3. search.

